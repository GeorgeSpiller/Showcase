{"version":3,"sources":["components/Divider-RedWaves.js","components/DividerRedPeaks.js","components/FooterContainer.js","components/WindowDimentions.js","components/three-js-components/Components/Box.js","components/three-js-components/Components/UbuntuFont.js","components/three-js-components/Components/Icosahedron.js","components/three-js-components/Components/StandaredCameraControls.js","components/three-js-components/CanvasWelcome.js","components/resources/MengerSponge.glb","components/three-js-components/Components/MergerSponge.js","components/three-js-components/store/CameraPositions.js","components/three-js-components/Components/CameraAnimation.js","components/three-js-components/Components/ProjectSplashScreens/ProjectSplashScreenPoint.js","components/three-js-components/Components/ProjectSplashScreens/SimpleFont.js","components/three-js-components/store/TextAttributes.js","components/three-js-components/Components/ProjectSplashScreens/ProjOne.js","components/three-js-components/Components/ProjectSplashScreens/ProjTwo.js","components/three-js-components/Components/ProjectSplashScreens/ProjThree.js","components/three-js-components/Components/ProjectSplashScreens/ProjectSplashScreenManger.js","components/three-js-components/Components/PointLightSpring.js","components/three-js-components/Components/PointLightOrbit.js","components/three-js-components/CanvasProjects.js","App.js","index.js"],"names":["DividerRedWaves","className","DividerRedPeaks","FooterContainer","href","getWindowDimensions","window","width","innerWidth","height","innerHeight","Box","props","ref","useRef","useState","hovered","setHover","active","setActive","useFrame","current","rotation","x","y","z","scale","onClick","event","onPointerOver","onPointerOut","args","color","UbuntuFontMesh","textOptions","font","THREE","parse","Ubuntu","size","position","attach","text","Iconsahedron","pushForce","setPushForce","xRotSpeed","Math","random","yRotSpeed","zRotSpeed","camera","translateZ","radius","detail","defaultProps","StandardCameraControls","useThree","domElement","gl","controls","update","CanvasWelcome","Icosahedrons","genRandomPosInFrame","max","cord","floor","i","IcosahedronAmount","push","intensity","enableZoom","autoRotate","target","extend","OrbitControls","Model","group","nodes","useGLTF","MengerSponge","dispose","castShadow","receiveShadow","geometry","mesh_0","metalness","roughness","preload","p1_position","Vector3","p1_target","p2_position","p2_target","p3_position","p3_target","destObj","Object3D","CameraAnimation","finalPos","finalTarget","projectNumber","lerp","time","lookAt","ProjectSplashScreen","SimpleFont","message","fadeInDelay","mesh","mat","shapes","generateShapes","currOpac","opacity","transparent","side","projectOne","p1_title_message","p1_title_position","p1_title_size","p1_body_message","p1_body_position","p1_body_size","projectTwo","projectThree","PorjOne","Fragment","PorjTwo","ProjectSplashScreenManager","PointLightLightSpring","speed","plane","startRange","light","clock","sin","getElapsedTime","PointLightLightOrbit","rad","originalPosX","originalPosZ","cos","CanvasProjects","setProjectNumber","fallback","App","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","continueAnyway","setcontinueAnyway","style","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da5e28e8.chunk.js","sourcesContent":["export default function DividerRedWaves() {\r\n    return(\r\n        <div className=\"spacer1 layer1\" />\r\n    );\r\n}\r\n","export default function DividerRedPeaks() {\r\n    return(\r\n        <div className=\"spacer2 layer2\" />\r\n    );\r\n}\r\n","export default function FooterContainer() {\r\n    return(\r\n        <div className=\"footerDiv footerFonts\"> \r\n            <p> Thank you for visiting my website. I hope you enjoyed your stay! Please check out my GitHub <a href=\"https://github.com/GeorgeSpiller/\"> GitHub/GeorgeSpiller </a> to browse some of the projects mentioned above, and some others.</p>\r\n            <p> Email: <a href=\"https://mail.google.com/mail/u/0/\"> geospiller@gmail.com </a>    Phone: <a href=\"https://www.wikihow.com/Use-the-Telephone\"> (+44) 7500600046</a></p>\r\n        </div>\r\n    );\r\n}\r\n","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { useFrame } from '@react-three/fiber'\r\n\r\n\r\nexport default function Box(props) {\r\n    // This reference will give us direct access to the THREE.Mesh object\r\n    const ref = useRef()\r\n    // Set up state for the hovered and active state\r\n    const [hovered, setHover] = useState(false)\r\n    const [active, setActive] = useState(false)\r\n    // Subscribe this component to the render-loop, rotate the mesh every frame\r\n    useFrame(() => {\r\n      ref.current.rotation.x += 0.01; \r\n      ref.current.rotation.y += 0.01;\r\n      ref.current.rotation.z += 0.01;\r\n    \r\n    })\r\n    // Return the view, these are regular Threejs elements expressed in JSX\r\n    return (\r\n      <mesh\r\n        {...props}\r\n        ref={ref}\r\n        scale={active ? 2 : 1.5}\r\n        onClick={(event) => setActive(!active)}\r\n        onPointerOver={(event) => setHover(true)}\r\n        onPointerOut={(event) => setHover(false)}>\r\n        <boxGeometry args={[1, 1, 1]} />\r\n        <meshStandardMaterial color={hovered ? 'hotpink' : 'orange'} />\r\n      </mesh>\r\n    )\r\n  }\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as THREE from 'three';\r\nimport Ubuntu from '../../resources/Ubuntu_Bold.json';\r\n\r\nexport default function UbuntuFontMesh(props) {\r\n\r\n    // parse JSON file with Three\r\n    const font = new THREE.FontLoader().parse(Ubuntu);\r\n\r\n    // configure font geometry\r\n    const textOptions = {\r\n    font,\r\n    size: 1,\r\n    height: 1\r\n    };\r\n\r\n    return (\r\n        <mesh position={props.position}>\r\n          <textGeometry attach='geometry' args={[props.text, textOptions]} />\r\n          <meshNormalMaterial attach='material' />\r\n        </mesh>\r\n    );\r\n}\r\n\r\nUbuntuFontMesh.propTypes = {\r\n    text: PropTypes.string,\r\n    position: PropTypes.array,\r\n};\r\n\r\nUbuntuFontMesh.defaultProps = {\r\n    text: 'Welcome',\r\n    position: [-3, 0, 0],\r\n};","import React, { useRef, useState } from 'react'\r\nimport { useFrame } from '@react-three/fiber'\r\n\r\n\r\nexport default function Iconsahedron(props) {\r\n    // This reference will give us direct access to the THREE.Mesh object\r\n    const ref = useRef()\r\n    const [hovered, setHover] = useState(false)\r\n    //const [active, setActive] = useState(false)\r\n    const [pushForce, setPushForce] = useState(0)\r\n    // animate random rotation speeds\r\n    const xRotSpeed = Math.random() / 100;\r\n    const yRotSpeed = Math.random() / 100;\r\n    const zRotSpeed = Math.random() / 100;\r\n\r\n    // animation loop\r\n    useFrame(( { camera } ) => {\r\n        // rotations\r\n        if (pushForce > 0) {\r\n            ref.current.translateZ(pushForce)\r\n\r\n            setPushForce(pushForce - zRotSpeed);\r\n        } else {\r\n\r\n        }\r\n        ref.current.rotation.x += xRotSpeed;\r\n        ref.current.rotation.y += yRotSpeed;\r\n        ref.current.rotation.z += zRotSpeed; \r\n    })\r\n\r\n    return (\r\n      <mesh\r\n        ref={ref}\r\n        scale={1}\r\n        onClick={(event) => setPushForce(0.3)}\r\n        onPointerOver={(event) => setHover(true)}\r\n        onPointerOut={(event) => setHover(false)}\r\n        position={props.position}>\r\n        <icosahedronGeometry radius={1} detail={0} />\r\n        <meshPhongMaterial color={hovered ? '#EF5F67' : \"#D53867\"} />\r\n      </mesh>\r\n    )\r\n  }","import React, { useRef } from 'react'\r\nimport { useFrame, useThree, extend} from '@react-three/fiber'\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\n\r\n// Extend will make OrbitControls available as a JSX element called orbitControls for us to use.\r\nextend({ OrbitControls });\r\n\r\nexport default function StandardCameraControls(props) {  \r\n    // Get a reference to the Three.js Camera, and the canvas html element.  \r\n    // We need these to setup the OrbitControls component.  \r\n    // https://threejs.org/docs/#examples/en/controls/OrbitControls  \r\n    const { camera, gl: { domElement }} = useThree();  \r\n    const controls = useRef();  \r\n    // Update orbit controls every frame\r\n    useFrame(() => controls.current.update());  \r\n    return <orbitControls \r\n        ref={controls} \r\n        args={[camera, domElement]} \r\n        {...props} \r\n        />;\r\n};","import React from 'react'\r\nimport { Canvas } from '@react-three/fiber'\r\nimport Box from './Components/Box';\r\nimport UbuntuFontMesh from './Components/UbuntuFont';\r\nimport Icosahedron  from './Components/Icosahedron';\r\nimport StandardCameraControls from './Components/StandaredCameraControls';\r\n\r\nexport default function CanvasWelcome(props) {\r\n\r\n    // generate props.IcosahedronAmount Icosahedrons at random positions\r\n    const Icosahedrons = [];\r\n    // functions for generating random cordinates\r\n    function genRandomPosInFrame(max) {\r\n        const cord = (max) => (Math.floor(Math.random() * (max*2))) - max;\r\n        return [cord(max), cord(max), cord(max)]\r\n      }    \r\n\r\n    // push Icosahedrons onto array, each with unique key\r\n    for (let i = 1; i <= props.IcosahedronAmount; i++) {\r\n        Icosahedrons.push(<Icosahedron key={i} position={genRandomPosInFrame(15)}/>);\r\n    }\r\n\r\n    return (  \r\n    <div className=\"CanvasWelcome\">\r\n        <Canvas >\r\n            <ambientLight intensity={0.8}/>\r\n            <pointLight position={[10, 10, 10]} />\r\n            \r\n            <StandardCameraControls \r\n                    enableZoom={false} \r\n                    autoRotate={true}\r\n                    target={[0, 0, 0]}   \r\n            />\r\n            {Icosahedrons}\r\n            <UbuntuFontMesh text={props.text} position={props.position}/>\r\n            <Box position={[0, 2, 0]} />\r\n        </Canvas>\r\n    </div>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/MengerSponge.440c7b68.glb\";","/*\r\nAuto-generated by: https://github.com/pmndrs/gltfjsx\r\n*/\r\n\r\nimport React, { useRef } from 'react'\r\nimport { useGLTF } from '@react-three/drei'\r\nimport MengerSponge from '../../resources/MengerSponge.glb'\r\n\r\nexport default function Model(props) {\r\n  const group = useRef()\r\n  const { nodes } = useGLTF(MengerSponge)\r\n  return (\r\n    <group ref={group} dispose={null}>\r\n      <mesh\r\n        {...props}\r\n        scale={1}\r\n        castShadow\r\n        receiveShadow\r\n        geometry={nodes.mesh_0.geometry}\r\n        >\r\n        <meshPhysicalMaterial \r\n          color={'#FFCAC6'}\r\n          metalness={0.6}\r\n          roughness={0.2}\r\n        />\r\n      </mesh>\r\n    </group>\r\n  )\r\n}\r\n\r\nuseGLTF.preload(MengerSponge)","import { Vector3, Object3D } from 'three';\r\n\r\nconst p1_position = new Vector3(20, 0, 30)\r\nconst p1_target = new Vector3(20, 0, 0)\r\n\r\nconst p2_position = new Vector3(0, 0, -20)\r\nconst p2_target = new Vector3(-16, 0, 0)\r\n\r\nconst p3_position = new Vector3(0, 20, 20)\r\nconst p3_target = new Vector3(0, 20, 0)\r\n\r\nvar destObj = new Object3D();\r\n\r\ndestObj.position.x = p1_target.x;\r\ndestObj.position.y = p1_target.y;\r\ndestObj.position.z = p1_target.z;\r\n\r\nexport {\r\n    p1_position,\r\n    p1_target,\r\n    p2_position, \r\n    p2_target,\r\n    p3_position, \r\n    p3_target,\r\n    destObj\r\n}","import { useFrame} from '@react-three/fiber';\r\nimport {\r\n  p1_position,\r\n  p1_target,\r\n  p2_position, \r\n  p2_target,\r\n  p3_position, \r\n  p3_target,\r\n  destObj\r\n} from '../store/CameraPositions';\r\n\r\nexport default function CameraAnimation({projectNumber}) {\r\n\r\n    var finalPos;\r\n    var finalTarget;\r\n    const time = 0.01;\r\n\r\n    switch(projectNumber) {\r\n      case 1:\r\n        finalPos = p1_position;\r\n        finalTarget = p1_target;\r\n        break;\r\n      case 2:\r\n        finalPos = p2_position;\r\n        finalTarget = p2_target;\r\n        break;\r\n      case 3:\r\n        finalPos = p3_position;\r\n        finalTarget = p3_target;\r\n        break;\r\n      default:\r\n        finalPos = p1_position;\r\n        finalTarget = p1_target;\r\n    }\r\n\r\n\r\n    useFrame(({ camera }) => {\r\n\r\n    camera.position.lerp(finalPos, time);\r\n    destObj.position.lerp(finalTarget, time*1.5);\r\n\r\n    camera.lookAt(destObj.position.x, destObj.position.y, destObj.position.z);\r\n\r\n  })  \r\n\r\n    return null\r\n  }\r\n","import React, { useRef } from 'react';\r\n\r\nexport default function ProjectSplashScreen({position, color}) {\r\n    const ref = useRef()\r\n    return (\r\n      <mesh\r\n        position={position}\r\n        ref={ref}\r\n        scale={1}>\r\n        <boxGeometry args={[1, 1, 1]} />\r\n        <meshStandardMaterial color={color} />\r\n      </mesh>\r\n    )\r\n  }\r\n","import React, { useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as THREE from 'three';\r\nimport Ubuntu from '../../../resources/Ubuntu_Bold.json';\r\nimport { useFrame} from '@react-three/fiber';\r\n\r\nexport default function SimpleFont({ message, position, size, color, fadeInDelay}) {\r\n\r\n    const mesh = useRef();\r\n    const mat = useRef();\r\n    const font = new THREE.FontLoader().parse(Ubuntu);\r\n    const shapes = font.generateShapes( message, size );\r\n    const opacity = 0.8;\r\n    var currOpac = 0;\r\n\r\n    useFrame(({ camera }) => {\r\n        if (fadeInDelay) {            \r\n            if (currOpac < opacity) {\r\n                currOpac += 0.002;\r\n            }\r\n            mat.current.opacity=currOpac;\r\n        }\r\n        mesh.current.lookAt(camera.position);\r\n    }, [mesh])\r\n\r\n    return (\r\n        <mesh position={position} ref={mesh}>\r\n            <shapeBufferGeometry  attach=\"geometry\" args={[shapes]} />\r\n            <meshBasicMaterial \r\n                attach=\"material\"\r\n                color={color}\r\n                transparent={true}\r\n                opacity={opacity}\r\n                side={THREE.DoubleSide}\r\n                ref={mat}\r\n            />\r\n        </mesh>\r\n    );\r\n}\r\n\r\nSimpleFont.propTypes = {\r\n    message: PropTypes.string,\r\n    position: PropTypes.array,\r\n    size: PropTypes.number,\r\n    color: PropTypes.string,\r\n    fadeInDelay: PropTypes.bool\r\n};\r\n\r\nSimpleFont.defaultProps = {\r\n    message: 'Sample Text',\r\n    position: [25, 3, 20],\r\n    size: 1,\r\n    color: \"#424242\",\r\n    fadeInDelay: false\r\n};\r\n\r\n","const projectOne = {\r\n    p1_title_message: \"Project One - React.\",\r\n    p1_title_position: [20, 3, 20],\r\n    p1_title_size: 1, \r\n    \r\n    p1_body_message: \"This project is the website itself. It is coded  in\\nReact and uses react-three-fiber (a react renderer for \\nthreejs). The goal was to create a website that could\\nshowcase the various different projects that I have\\nworked on over the years, big and small. I hope you enjoy!\\nLink to GitHub bellow (Showcase).\\n\\n                              Please click to continue....\",\r\n    p1_body_position: [20, 1, 20],\r\n    p1_body_size: 0.4, \r\n}\r\n\r\nconst projectTwo = {\r\n    p1_title_message: \"Project Two\\nA51 Tweets.\",\r\n    p1_title_position: [-10.5, 0, -14],\r\n    p1_title_size: 1, \r\n    \r\n    p1_body_message: \"This project was made to dynamically\\nfetch Tweets from @Arena_51_Gaming\\nto compile them into an\\nanimated GIF. The goal was to quickly\\nand easily be able to produce high \\nquality GIFs of the top 5 most recent\\ntweets, in order to display them on our\\nlivestreams\\n\\nLink to GitHub bellow (A51TweetDisplay).\",\r\n    p1_body_position: [5, 4, 0],\r\n    p1_body_size: 0.4, \r\n}\r\n\r\nconst projectThree = {\r\n    p1_title_message: \"Project Three\\nPortal Twitch Bot.\",\r\n    p1_title_position: [-45, 30, -10],\r\n    p1_title_size: 10, \r\n    \r\n    p1_body_message:\"The goal of this project was to create an interface\\nbetween Twitch chat (viewers of a Twitch Livestream)\\nand the game console of Portal 2 (by Valve). It allows\\npeople to type commands in Twitch chat, which would\\nthen be picked up by a bot using Twitch's API. This command\\nwould then be replaced by its source development console\\nequivilent, and executed in the game environment through an\\nopen telnet server.\\nLink to GitHub bellow (Portal2TwitchBot).\", \r\n    p1_body_position: [3, 25, 5],\r\n    p1_body_size: 0.4, \r\n}\r\n\r\n\r\nexport {\r\n    projectOne,\r\n    projectTwo,\r\n    projectThree,\r\n\r\n}\r\n","import React from 'react';\r\nimport SimpleFont from './SimpleFont';\r\nimport {\r\n    projectOne,\r\n} from '../../store/TextAttributes';\r\n\r\nexport default function PorjOne(props) {\r\n    return (\r\n        <React.Fragment>\r\n            <SimpleFont \r\n                message={projectOne.p1_title_message}\r\n                position={projectOne.p1_title_position}\r\n                size={projectOne.p1_title_size}\r\n                fadeInDelay={false}\r\n            />\r\n            <SimpleFont \r\n                message={projectOne.p1_body_message}\r\n                position={projectOne.p1_body_position}\r\n                size={projectOne.p1_body_size}\r\n                fadeInDelay={false}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n  }\r\n","import React from 'react';\r\nimport SimpleFont from './SimpleFont';\r\nimport {\r\n    projectTwo,\r\n} from '../../store/TextAttributes';\r\n\r\nexport default function PorjTwo() {\r\n    return (\r\n        <React.Fragment>\r\n            <SimpleFont \r\n                message={projectTwo.p1_title_message}\r\n                position={projectTwo.p1_title_position}\r\n                size={projectTwo.p1_title_size}\r\n                fadeInDelay={false}\r\n            />\r\n            <SimpleFont \r\n                message={projectTwo.p1_body_message}\r\n                position={projectTwo.p1_body_position}\r\n                size={projectTwo.p1_body_size}\r\n                color={\"#000000\"}\r\n                fadeInDelay={true}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n  }\r\n","import React from 'react';\r\nimport SimpleFont from './SimpleFont';\r\nimport {\r\n    projectThree,\r\n} from '../../store/TextAttributes';\r\n\r\nexport default function PorjTwo() {\r\n    return (\r\n        <React.Fragment>\r\n            <SimpleFont \r\n                message={projectThree.p1_title_message}\r\n                position={projectThree.p1_title_position}\r\n                size={projectThree.p1_title_size}\r\n                fadeInDelay={false}\r\n            />\r\n            <SimpleFont \r\n                message={projectThree.p1_body_message}\r\n                position={projectThree.p1_body_position}\r\n                size={projectThree.p1_body_size}\r\n                fadeInDelay={true}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n  }\r\n","import React from 'react';\r\nimport ProjectSplashScreen from './ProjectSplashScreenPoint';\r\nimport ProjOne from './ProjOne';\r\nimport PorjTwo from './ProjTwo';\r\nimport ProjThree from './ProjThree';\r\n\r\nexport default function ProjectSplashScreenManager({projectNumber}) {\r\n\r\n    switch(projectNumber) {\r\n        case 1:\r\n            return (\r\n                <React.Fragment>\r\n                    <ProjOne />\r\n                </React.Fragment>)\r\n        case 2:\r\n            return (\r\n                <React.Fragment>\r\n                    <PorjTwo />\r\n                </React.Fragment>)\r\n        case 3:\r\n            return (\r\n                <React.Fragment>\r\n                    <ProjThree />\r\n                </React.Fragment>)\r\n        default:\r\n            return (\r\n                <React.Fragment>\r\n                    <ProjectSplashScreen position={[25, 0, 20]} color={\"#ff0000\"}/>\r\n                    <ProjectSplashScreen position={[0, 0, -10]} color={\"#3b00ff\"}/>\r\n                    <ProjectSplashScreen position={[-10, 0, -18]} color={\"#3b00ff\"}/>\r\n                </React.Fragment>)\r\n      }\r\n\r\n  }\r\n","import React, { useRef } from 'react';\r\nimport { useFrame} from '@react-three/fiber';\r\nimport PropTypes from 'prop-types';\r\nimport Icosahedron from './Icosahedron';\r\n\r\nexport default function PointLightLightSpring({intensity, color, speed, position, plane, startRange}) {\r\n\r\n    const light = useRef();\r\n\r\n    useFrame(({ clock }) => {\r\n        switch(plane) {\r\n            case 0:\r\n                light.current.position.x = startRange + Math.sin(clock.getElapsedTime()) * speed\r\n                break;\r\n            case 1:\r\n                light.current.position.y = startRange + Math.sin(clock.getElapsedTime()) * speed\r\n                break;\r\n            case 2:\r\n                light.current.position.z = startRange + Math.sin(clock.getElapsedTime()) * speed\r\n                break;\r\n            default:\r\n                light.current.position.z = startRange + Math.sin(clock.getElapsedTime()) * speed\r\n                break;\r\n        }\r\n    })\r\n    return (\r\n        <group position={position} ref={light}>\r\n            <Icosahedron />\r\n            <pointLight intensity={intensity} color={color} />   \r\n        </group>\r\n    );\r\n\r\n\r\n};\r\n\r\n\r\n\r\nPointLightLightSpring.propTypes = {\r\n    intensity: PropTypes.number,\r\n    color: PropTypes.string,\r\n    speed: PropTypes.number,\r\n    position: PropTypes.array,\r\n    plane: PropTypes.number,\r\n    startRange: PropTypes.number\r\n};\r\n\r\nPointLightLightSpring.defaultProps = {\r\n    intensity: 0.4,\r\n    color: \"#ffffff\",\r\n    speed: 30,\r\n    position: [0, 0, 0],\r\n    plane: 2,\r\n    startRange: 50\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useRef } from 'react';\r\nimport { useFrame} from '@react-three/fiber';\r\nimport PropTypes from 'prop-types';\r\nimport Icosahedron from './Icosahedron';\r\n\r\nexport default function PointLightLightOrbit({intensity, color, rad, position}) {\r\n\r\n    const light = useRef();\r\n\r\n    const originalPosX = position[0];\r\n    const originalPosZ = position[2];\r\n\r\n    useFrame(({ clock }) => {\r\n       // console.log(light.current.position)\r\n        light.current.position.x = originalPosX + Math.cos(clock.getElapsedTime()) * rad\r\n        light.current.position.z = originalPosZ + Math.sin(clock.getElapsedTime()) * rad\r\n        \r\n    })\r\n    return (\r\n        <group position={position} ref={light}>\r\n            <Icosahedron />\r\n            <pointLight intensity={intensity} color={color} />   \r\n        </group>\r\n    );\r\n\r\n\r\n};\r\n\r\n\r\n\r\nPointLightLightOrbit.propTypes = {\r\n    intensity: PropTypes.number,\r\n    color: PropTypes.string,\r\n    rad: PropTypes.number,\r\n    position: PropTypes.array,\r\n};\r\n\r\nPointLightLightOrbit.defaultProps = {\r\n    intensity: 0.4,\r\n    color: \"#ffffff\",\r\n    rad: 30,\r\n    position: [0, 0, 0],\r\n};\r\n","import React, { Suspense, useState } from 'react';\r\nimport { Canvas } from '@react-three/fiber';\r\nimport MergerSponge from './Components/MergerSponge';\r\nimport CameraAnimation from './Components/CameraAnimation';\r\nimport ProjectSplashScreenManager from './Components/ProjectSplashScreens/ProjectSplashScreenManger';\r\nimport PointLightLightSpring from './Components/PointLightSpring';\r\nimport PointLightOrbit from './Components/PointLightOrbit';\r\nimport {\r\n    p1_position,\r\n    p2_position, \r\n    p3_position,\r\n} from './store/CameraPositions';\r\n\r\nconst MAX_PROJECT_INDEX = 2\r\n\r\n\r\nexport default function CanvasProjects() {\r\n\r\n    \r\n    const [projectNumber, setProjectNumber] = useState(1);\r\n\r\n    // Lighting Animations\r\n    const allSpeed = 20;\r\n\r\n\r\n    return (  \r\n    \r\n    <Suspense fallback={<div className=\"spinner\"><div className=\"spinner-border\"></div></div>}>\r\n        <div className={\"CanvasProjectsDiv\"} onClick={(event) => {\r\n                setProjectNumber(projectNumber + 1)\r\n                if (projectNumber > MAX_PROJECT_INDEX) {\r\n                    setProjectNumber(1);\r\n               } \r\n            }}>\r\n            <Canvas >\r\n                <CameraAnimation \r\n                        projectNumber={projectNumber}\r\n                />\r\n\r\n                <ambientLight intensity={0.2}/>\r\n                \r\n                <pointLight position={p1_position} color={'#ffffff'} intensity={0.9}/>\r\n                \r\n                <pointLight position={p2_position} color={'#ffffff'} intensity={0.2}/>\r\n                \r\n                <pointLight position={p3_position} color={'#ffffff'} intensity={0.2}/>\r\n                \r\n                <PointLightLightSpring \r\n                    intensity={0.8}\r\n                    color={\"#C62368\"}\r\n                    speed={allSpeed}\r\n                    position={[0, -8, -16.5]}\r\n                    plane={0}\r\n                    startRange={0}\r\n                />\r\n\r\n                <PointLightOrbit \r\n                    intensity={0.8}\r\n                    color={\"#C62368\"}\r\n                    rad={23}\r\n                    position={[0, 15, -20]}\r\n                />\r\n\r\n                <PointLightLightSpring \r\n                    intensity={0.4}\r\n                    color={\"#a53865\"}\r\n                    speed={allSpeed}\r\n                    position={[0, 8.8, 0]}\r\n                    plane={2}\r\n                    startRange={-16}\r\n                />\r\n\r\n                <ProjectSplashScreenManager projectNumber={projectNumber}/>\r\n\r\n                <MergerSponge position={[-13.5, -13.5, -30]}/>\r\n            </Canvas>\r\n        </div>\r\n    </Suspense>\r\n    );\r\n}\r\n","import DividerRedWaves from './components/Divider-RedWaves';\nimport DividerRedPeaks from './components/DividerRedPeaks';\nimport FooterContainer from './components/FooterContainer';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport useWindowDimensions from './components/WindowDimentions';\nimport CanvasWelcome from './components/three-js-components/CanvasWelcome';\nimport CanvasProjects from './components/three-js-components/CanvasProjects';\nimport React, { useState } from 'react';\n\n\nfunction App() {\n  const { height, width } = useWindowDimensions();\n\n  const [continueAnyway, setcontinueAnyway] = useState(false)\n\n  if (width > 769 || continueAnyway) {\n    return(\n      <Scrollbars style={{ width: width, height: height }} >\n        \n        <CanvasWelcome IcosahedronAmount={20} />\n        <DividerRedWaves />\n        <CanvasProjects />\n        <DividerRedPeaks />\n        <FooterContainer />\n        \n        {/* Plan:\n        - Next section located iether benieth or as a button\n          to different page (below Porject Canvas)\n        - This new section is dedicated to other \n          CV info (GAP Year, switzerland, ect. ect) \n        - Various, simpler Div sections with one half canvas,\n          the other half text desription.\n        - Canvas to contain cube with images as textures. Cube\n          animates to show each face (image)\n         */}\n\n      </Scrollbars>\n\n    );\n  } else {\n    return (\n      <div className=\"smallWidthDiv footerFonts\"> \n        <p> This site was made for wider screens, and your experience may be effected if you continue.</p>\n        <p> <button onClick={() => {\n          setcontinueAnyway(true)\n          console.log(continueAnyway)\n          \n          }}> Continue Anyway </button> </p>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}